{"version":3,"sources":["components/matches/CopyReceiver.js","common/utils.js","components/matches/Pairs.js","components/matches/match-pairs.js","components/matches/Matches.js","common/x.svg","common/RemoveButton.js","components/person/Person.js","components/person/utils.js","common/ValidationError.js","components/person/PersonForm.js","components/Main.js","common/useStoredState.js","components/App.js","index.js"],"names":["CopyReceiver","string","giver","receiver","useState","copyText","setCopyText","text","window","location","origin","toString","aes","encrypt","process","href","onClick","setTimeout","Pairs","pairs","showGroups","length","colSpan","map","a","b","name","group","matchPairs","person","calculateSync","timeout","p","i","Matches","setPairs","error","setError","setShowGroups","useLayoutEffect","calculateMatches","e","Error","type","disabled","style","paddingLeft","onChange","prevState","checked","className","message","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","x1","y1","x2","y2","SvgX","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ref","id","ForwardRef","RemoveButton","aria-hidden","Person","removePerson","groups","useMemo","reduce","acc","find","item","push","sort","localeCompare","mapPersonByGroup","groupId","aria-labelledby","ValidationError","children","PersonForm","usedNames","usedGroups","onSubmit","useForm","errors","handleSubmit","register","reset","data","undefined","htmlFor","aria-required","required","validate","value","includes","as","list","autoComplete","isString","str","Main","defaultValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","useStoredState","setPerson","Set","filter","prev","concat","prevPerson","App","hash","params","prmstr","search","substr","prmarr","split","tmparr","transformToArray","getSearchParameters","console","log","decrypt","cryptojs","enc","Utf8","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c8cbdb0.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport { encryptString } from '../../common/utils'\n\nexport const CopyReceiver = ({ giver, receiver }) => {\n  const [copyText, setCopyText] = useState('Copy link')\n\n  const showCopied = () => {\n    setCopyText('Copied')\n    setTimeout(() => {\n      setCopyText('Copy link')\n    }, 1000)\n  }\n\n  return (\n    <CopyToClipboard\n      text={`${window.location.origin.toString()}/?giver=${giver}&key=${encryptString(\n        receiver\n      )}`}\n    >\n      <a href=\"#\" onClick={showCopied}>\n        {copyText}\n      </a>\n    </CopyToClipboard>\n  )\n}\n","import aes from 'crypto-js/aes';\r\nimport cryptojs from 'crypto-js';\r\n\r\nexport const encryptString = (string) => {\r\n    const key = process.env.REACT_APP_ENCRYPT_KEY\r\n    return aes.encrypt(string, key)\r\n}\r\n\r\nexport const decryptHash = (hash) => {\r\n    const key = process.env.REACT_APP_ENCRYPT_KEY\r\n    const plaintext = aes.decrypt(hash.toString(), key)\r\n    return plaintext.toString(cryptojs.enc.Utf8)\r\n}","import { CopyReceiver } from './CopyReceiver'\n\nexport const Pairs = ({ pairs, showGroups }) => {\n  if (pairs.length < 1) {\n    return null\n  }\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th colSpan={showGroups ? 2 : 1}>Тайный санта</th>\n          <th colSpan={showGroups ? 2 : 1}>Получатель подарка</th>\n        </tr>\n        {showGroups && (\n          <tr>\n            <th>Имя</th>\n            <th>Группа</th>\n            <th>Имя</th>\n            <th>Группа</th>\n          </tr>\n        )}\n      </thead>\n      <tbody>\n        {pairs.map(([a, b]) => (\n          <tr key={a.name}>\n            <td>{a.name}</td>\n            {showGroups && <td>{a.group}</td>}\n            <td>\n              <CopyReceiver giver={a.name} receiver={b.name} />\n            </td>\n            {showGroups && <td>{b.group}</td>}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import { calculateSync } from 'gift-exchange'\n\nconst matchPairs = (person) => {\n  return calculateSync(person, {\n    timeout: 5000,\n  }).map((p, i) => [person[i], p])\n}\n\nexport default matchPairs\n","import { useLayoutEffect, useState } from 'react'\n\nimport { Pairs } from './Pairs'\nimport matchPairs from './match-pairs'\n\nimport './matches.css'\n\nconst errorMessage =\n  'Невозможно совпадение с указанными людьми, или произошла ошибка. Пожалуйста, попробуйте еще раз или измените свою конфигурацию, чтобы позволить каждому совпадать с кем-то.'\n\nexport const Matches = ({ person }) => {\n  const [pairs, setPairs] = useState([])\n  const [error, setError] = useState(null)\n  const [showGroups, setShowGroups] = useState(false)\n\n  useLayoutEffect(() => {\n    setPairs([])\n  }, [person])\n\n  const calculateMatches = async () => {\n    setError(null)\n    try {\n      setPairs(matchPairs(person))\n    } catch (e) {\n      setError(new Error(errorMessage))\n      setPairs([])\n    }\n  }\n\n  return (\n    <>\n      <button\n        onClick={calculateMatches}\n        type=\"button\"\n        disabled={person.length < 3}\n      >\n        Совпадения\n      </button>\n      <label\n        style={{\n          paddingLeft: '15px',\n        }}\n      >\n        <input\n          type=\"checkbox\"\n          onChange={() => setShowGroups((prevState) => !prevState)}\n          checked={showGroups}\n        />\n        Показывать группы\n      </label>\n      {error && <p className=\"error\">{error.message}</p>}\n      <Pairs pairs={error ? [] : pairs} showGroups={showGroups} />\n    </>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 18,\n  y1: 6,\n  x2: 6,\n  y2: 18\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 6,\n  y1: 6,\n  x2: 18,\n  y2: 18\n});\n\nfunction SvgX(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.fbfc4ef6.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as X } from './x.svg'\n\nexport const RemoveButton = ({ onClick }) => {\n  return (\n    <button onClick={onClick} className=\"muted\" title=\"Remove\" type=\"button\">\n      <X aria-hidden />\n    </button>\n  )\n}\n","import { useMemo } from 'react'\n\nimport { RemoveButton } from '../../common/RemoveButton'\nimport { mapPersonByGroup } from './utils'\n\nconst UNDEFINED_GROUP = 'fba449b5-deb3-400c-991c-4bac2bb1ad33'\n\nexport const Person = ({ person, removePerson }) => {\n  const groups = useMemo(() => mapPersonByGroup(person), [person])\n\n  if (!person.length) {\n    return null\n  }\n\n  return (\n    <>\n      <ul>\n        {groups.map((group) => {\n          const groupId = `person-group-${group.group ?? UNDEFINED_GROUP}`\n          return (\n            <li key={groupId}>\n              <span id={groupId}>\n                {group.group === null ? 'Нет группы' : group.group}\n              </span>\n              <ul aria-labelledby={groupId}>\n                {group.person.map((p) => (\n                  <li key={p.name}>\n                    {p.name} <RemoveButton onClick={() => removePerson(p)} />\n                  </li>\n                ))}\n              </ul>\n            </li>\n          )\n        })}\n      </ul>\n    </>\n  )\n}\n","export const mapPersonByGroup = (person) =>\n  person\n    .reduce((acc, person) => {\n      const group = acc.find((item) => item.group === (person.group ?? null))\n      if (group) {\n        group.person.push(person)\n      } else {\n        acc.push({\n          group: person.group ?? null,\n          person: [person],\n        })\n      }\n      return acc\n    }, [])\n    .sort((a, b) => {\n      if (a.group === null || b.group === null) {\n        return 1\n      }\n      return a.group.localeCompare(b.group)\n    })\n","export const ValidationError = ({ children }) => (\n  <span className=\"validation\">{children}</span>\n)\n","import { useForm } from 'react-hook-form'\nimport { ErrorMessage } from '@hookform/error-message'\n\nimport { ValidationError } from '../../common/ValidationError'\n\nimport '../../common/css/form.css'\n\nexport const PersonForm = ({ usedNames, usedGroups, onSubmit }) => {\n  const { errors, handleSubmit, register, reset } = useForm()\n\n  const submitHandler = (data) => {\n    onSubmit({\n      name: data['person-name'],\n      group: data['person-group'] === '' ? undefined : data['person-group'],\n    })\n    reset()\n  }\n\n  return (\n    <form onSubmit={handleSubmit(submitHandler)}>\n      <fieldset>\n        <legend>Добавить нового человека</legend>\n        <label htmlFor=\"person-name\" className=\"label-required\">\n          Имя\n        </label>\n        <input\n          id=\"person-name\"\n          name=\"person-name\"\n          type=\"text\"\n          aria-required\n          ref={register({\n            required: 'Требуется имя',\n            validate: (value) =>\n              (value && !usedNames.includes(value)) ||\n              'Имя должно быть уникальным',\n          })}\n        />\n        <ErrorMessage errors={errors} name=\"person-name\" as={ValidationError} />\n\n        <label htmlFor=\"person-group\">Группа</label>\n        <input\n          id=\"person-group\"\n          name=\"person-group\"\n          type=\"text\"\n          list=\"groupOptions\"\n          autoComplete=\"off\"\n          ref={register}\n        />\n        <datalist id=\"groupOptions\">\n          {usedGroups.map((group) => (\n            <option key={group}>{group}</option>\n          ))}\n        </datalist>\n        <p className=\"meta\">\n          Используйте группы для простых исключений, люди в одной группе не\n          попадают друг другу.\n        </p>\n        <button type=\"submit\">Добавить человека</button>\n      </fieldset>\n    </form>\n  )\n}\n","import { useMemo } from 'react'\nimport { Tab, TabList, TabPanels, Tabs, TabPanel } from '@reach/tabs'\n\nimport { Matches } from './matches/Matches'\nimport { PersonForm, Person } from './person'\n\nimport { useStoredState } from '../common/useStoredState'\n\nimport '../common/css/tabs.css'\n\nconst isString = (str) => typeof str === 'string'\n\nexport const Main = () => {\n  const [person, setPerson] = useStoredState('secret-santa-person', [])\n\n  const usedNames = useMemo(() => person.map((p) => p.name), [person])\n  const usedGroups = useMemo(\n    () => [...new Set(person.map((p) => p.group).filter(isString))],\n    [person]\n  )\n\n  const addPerson = (person) => {\n    setPerson((prev) => prev.concat(person))\n  }\n\n  const removePerson = (person) => {\n    setPerson((prevPerson) => prevPerson.filter((p) => p.name !== person.name))\n  }\n\n  const clear = () => {\n    setPerson([])\n  }\n\n  return (\n    <main>\n      <section>\n        <p>\n          Создайте совпадение имен для обмена подарками. Поддерживает\n          группировку людей, для исключения на основе имени группы.\n        </p>\n        <button className=\"danger\" onClick={clear}>\n          Очистить\n        </button>\n      </section>\n      <Tabs>\n        <TabList>\n          <Tab>Люди</Tab>\n          <Tab disabled={person.length < 3}>Совпадения</Tab>\n        </TabList>\n        <TabPanels>\n          <TabPanel>\n            <PersonForm\n              usedNames={usedNames}\n              usedGroups={usedGroups}\n              onSubmit={addPerson}\n            />\n            <Person person={person} removePerson={removePerson} />\n          </TabPanel>\n          <TabPanel>\n            <Matches person={person} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </main>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nexport const useStoredState = (key, defaultValue) => {\n  const [value, setValue] = useState(() => {\n    const value = localStorage.getItem(key)\n    return value !== null ? JSON.parse(value) : defaultValue\n  })\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [value, key])\n\n  return [value, setValue]\n}\n","import {useState} from \"react\";\nimport {Main} from './Main'\nimport {decryptHash} from \"../common/utils\";\n\nconst App = () => {\n    // const [params, setParams] = useState(getSearchParameters())\n\n    const transformToArray = (prmstr) => {\n        let params = {};\n        let prmarr = prmstr.split(\"&\");\n        for ( let i = 0; i < prmarr.length; i++) {\n            let tmparr = prmarr[i].split(\"=\");\n            params[tmparr[0]] = tmparr[1];\n        }\n        return params;\n    }\n\n    const getSearchParameters = () => {\n        let prmstr = window.location.search.substr(1);\n        return prmstr !== null && prmstr !== \"\" ? transformToArray(prmstr) : {};\n    }\n\n    const params = getSearchParameters();\n\n    console.log(params.giver, decryptHash(params.key))\n\n    return (\n        <>\n            <header>\n                <h1>\n                    Тайный Санта\n                    <span role=\"presentation\" aria-hidden=\"true\">\n            🎅🏼\n          </span>\n                </h1>\n            </header>\n            <Main/>\n        </>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nimport '@exampledev/new.css'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}